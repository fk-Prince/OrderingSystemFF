<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>