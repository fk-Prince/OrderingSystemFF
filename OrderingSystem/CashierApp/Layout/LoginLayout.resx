<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2BorderlessForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pass.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAA6FJREFUaEPt
        2UmIFFccx/FxV1BxAcXl5r6gQVyiHpSo9yReREVBxAVR8WhQUW8igrmJC3gQF4IIXkRBExOIorii4K7g
        chEkccf9+2vGQZlfvarq7urpgfeDDzTd9eq9mpp69a9XDTExMTExMTExMa00gzEHW3ACl3Afzxrps77T
        b9pG2w5Cq8p0/I7b+Fwmtd2OaajLdMB86Gy5A6jERcyD+mjxtMcSPIQbbDWpD/WlPlskP6KIM5rmAiag
        ZumCbfgAN6BaUN+a5DSWQjMK1+EGEaLrcBNmYTT6NNJnfbcZ5fy3XMUIFJKFeAXXsfMJBzAUWTMMh6C2
        bp/OS2jCrFraQGfHdZbkJsah3IzHHbh9O/oDbUDFaYudcJ0kOYleqDS98SdcH0l2QGMuK2q4F27HSU6h
        mvfLjjgN11eSPch90Br0H3A7THIN3VHt9MQtuD6TaB7IfL9uh31wO0qia2giisoU5JnIRP+dmc606mC3
        g5D9KDo6a67vENULwSyAaxiiv/xwpEXX4zKcx9enpXNYiizX/Ui4/kM0trmwmYQ3cA1DVOqlZQBUfLj2
        on30R1ouw7UPeY1mpahuAY/hGqT5DaF0xhW4tt9SpdUJoayHa5vmEXSMTTkIt2EWev4NZQ1cO2c1QvkJ
        rl0WTfOMLmy3QVZppaOuWdfOOYtQNFe4dlltRakWdT9m1RWhvIBr5/yPULrBtctKYyld1O7HrNIOOM8f
        9DlCqfSA9fBTKsXcj1kNQSi69bh2zhmEoqcp1y4rPReU7oF6rnQbZJG20LYCrp2zHKFUMmnpltZ0vx+L
        d3AbptmIUHSryXpbUnESihYKXNs0OrYx+C4auNs4Tb0XHqL7d7Oo0NaCuGsQUk5p+bZR0aWlHEPiQ4Qe
        xe7BNQw5gqJzFK7vkLvogWC0NKP7odtBknp8PPwPPyBTtOactyB5gL6odnT9563zNfbcJ2A28q4918MS
        j8b8C8rKYnyE23GSllzE08EuQkX5FXnLz1ov04rKxp9RlUzGE7iOkmiSqcVCvOh5t+qTZj/8A9dhmq+v
        WlQaqvZW9SX6PAPlvmoRXeNFTJalaEJaBxUNrvNa0nLUWtTk9aleqv0NN5Ba+AuFvUQLZSrUuRtUEdSX
        ipAWjV626ZWnyssi3hm/x2HMhPqqqwzEKughpJLrXG2PYyVUabWKaDlGM7BWInfjX9zAU6iYEX3Wd/pt
        F7StZvK0ZaOYmJiYmJiYmJg6S0PDFyG5mFzFt7l2AAAAAElFTkSuQmCC
</value>
  </data>
</root>